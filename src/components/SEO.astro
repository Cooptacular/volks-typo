---
export interface Props {
  title?: string;
  description?: string;
  image?: string;
  type?: 'website' | 'article';
  publishedTime?: string;
  canonical?: string;
}

import { config } from '../config';

const {
  title = config.title,
  description = config.description,
  image = '/og-image.png',
  type = 'website',
  publishedTime,
  canonical,
} = Astro.props;

const pageTitle = title === config.title ? title : `${title} | ${config.title}`;
const canonicalURL = canonical || new URL(Astro.url.pathname, Astro.site);
const imageURL = new URL(image, Astro.site);
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>{pageTitle}</title>
<meta name="description" content={description} />
<meta name="author" content={config.author.name} />

<link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL}favicon.svg`} />
<link rel="canonical" href={canonicalURL} />

<meta property="og:title" content={pageTitle} />
<meta property="og:description" content={description} />
<meta property="og:type" content={type} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:image" content={imageURL} />
<meta property="og:site_name" content={config.title} />
{publishedTime && <meta property="article:published_time" content={publishedTime} />}

<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={pageTitle} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={imageURL} />

<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />

<link rel="alternate" type="application/rss+xml" title={config.title} href="/rss.xml" />
<link rel="sitemap" type="application/xml" href="/sitemap-index.xml" />