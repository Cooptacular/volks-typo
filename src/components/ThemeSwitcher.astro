---
const THEMES = [
  { id: 'default', name: 'Default' },
  { id: 'brutal', name: 'Ultra Minimal' },
  { id: 'mono', name: 'Monochrome' },
  { id: 'dark', name: 'Dark Minimal' },
];
---

<div class="theme-switcher">
  <label for="theme-select">Theme</label>
  <select id="theme-select" aria-label="Select a theme">
    {THEMES.map(theme => <option value={theme.id}>{theme.name}</option>)}
  </select>
</div>

<script>
  const themeSelect = document.getElementById('theme-select');
  const themes = ['default', 'brutal', 'mono', 'dark'];

  const applyTheme = (theme) => {
    // Remove all possible theme classes from the <html> element
    document.documentElement.classList.remove(...themes.map(t => `theme-${t}`));
    
    // Add the new theme class if it's not the default theme
    if (theme !== 'default') {
      document.documentElement.classList.add(`theme-${theme}`);
    }
    
    // Save the user's preference to localStorage
    localStorage.setItem('theme', theme);
  };

  // Set the dropdown to the saved theme on page load
  const savedTheme = localStorage.getItem('theme');
  if (savedTheme && themes.includes(savedTheme)) {
    themeSelect.value = savedTheme;
    applyTheme(savedTheme);
  }

  // Listen for changes on the dropdown
  themeSelect.addEventListener('change', (e) => {
    applyTheme(e.target.value);
  });
</script>

<style>
  .theme-switcher {
    display: flex;
    align-items: center;
    gap: calc(var(--grid-unit) * 1);
    font-family: var(--font-mono);
    font-size: 0.875rem;
  }

  .theme-switcher label {
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: 500;
  }

  .theme-switcher select {
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    color: var(--color-text-primary);
    padding: calc(var(--grid-unit) / 2) calc(var(--grid-unit));
    border-radius: 4px;
    font-family: var(--font-mono);
    font-size: 0.875rem;
    cursor: pointer;
  }

  .theme-switcher select:focus {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
  }
</style>