---
import Layout from '../components/Layout.astro';

const base = import.meta.env.BASE_URL;

// Get all blog posts
const allPosts = await Astro.glob('../content/blog/*.md');

// Extract all categories from posts
const allCategories = new Set();
allPosts.forEach(post => {
  if (post.frontmatter.categories) {
    post.frontmatter.categories.forEach(category => {
      allCategories.add(category);
    });
  }
});

// Create category map with post counts
const categoryMap = {};
Array.from(allCategories).forEach(category => {
  categoryMap[category] = allPosts.filter(post => 
    post.frontmatter.categories && post.frontmatter.categories.includes(category)
  );
});

// Sort categories by post count (descending) then alphabetically
const sortedCategories = Object.entries(categoryMap)
  .sort((a, b) => {
    if (b[1].length !== a[1].length) {
      return b[1].length - a[1].length;
    }
    return a[0].localeCompare(b[0]);
  });
---

<Layout title="Categories - Volks-Typo" description="Browse articles by category" showSidebar={true}>
  <div class="categories-page">
    <header class="page-header">
      <h1 class="page-title">Categories</h1>
      <p class="page-description">
        Browse articles organized by category. Click on any category to see related posts.
      </p>
      <hr class="page-rule" />
    </header>

    <div class="categories-grid">
      {sortedCategories.map(([category, posts]) => (
        <div class="category-card">
          <h2 class="category-title">
            <a href={`${base}/categories/${category.toLowerCase().replace(/\s+/g, '-')}`}>
              {category}
            </a>
          </h2>
          <p class="category-count">
            {posts.length} article{posts.length === 1 ? '' : 's'}
          </p>
          
          <div class="category-posts">
            {posts.slice(0, 3).map(post => (
              <article class="category-post">
                <h3 class="category-post-title">
                  <a href={`${base}/blog/${post.file.split('/').pop()?.replace('.md', '')}`}>{post.frontmatter.title}</a>
                </h3>
                <time class="category-post-date" datetime={post.frontmatter.date}>
                  {new Date(post.frontmatter.date).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric'
                  })}
                </time>
              </article>
            ))}
            
            {posts.length > 3 && (
              <p class="category-more">
                <a href={`${base}/categories/${category.toLowerCase().replace(/\s+/g, '-')}`}>
                  View all {posts.length} articles â†’
                </a>
              </p>
            )}
          </div>
        </div>
      ))}
    </div>

    {sortedCategories.length === 0 && (
      <div class="no-categories">
        <p>No categories found. Add categories to your blog posts in the frontmatter.</p>
      </div>
    )}
  </div>
</Layout>

<style>
  .categories-page {
    max-width: 100%;
  }

  .page-header {
    text-align: center;
    margin-bottom: calc(var(--grid-unit) * 6);
  }

  .page-title {
    font-family: var(--font-heading-primary);
    font-size: 3rem;
    font-weight: 700;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.15em;
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .page-description {
    font-size: 1.125rem;
    line-height: 1.6;
    color: var(--color-text-secondary);
    max-width: 600px;
    margin: 0 auto calc(var(--grid-unit) * 3);
  }

  .page-rule {
    height: 4px;
    background-color: var(--color-accent);
    border: none;
    width: 120px;
    margin: 0 auto;
  }

  .categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: calc(var(--grid-unit) * 4);
  }

  .category-card {
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 8px;
    padding: calc(var(--grid-unit) * 3);
    transition: transform 0.3s ease, border-color 0.3s ease;
  }

  .category-card:hover {
    transform: translateY(-4px);
    border-color: var(--color-accent);
  }

  .category-title {
    font-family: var(--font-heading-secondary);
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: calc(var(--grid-unit));
    text-transform: uppercase;
    letter-spacing: 0.08em;
  }

  .category-title a {
    color: var(--color-accent);
    text-decoration: none;
  }

  .category-title a:hover,
  .category-title a:focus {
    color: var(--color-text-primary);
    text-decoration: underline;
  }

  .category-count {
    font-family: var(--font-mono);
    font-size: 0.85rem;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .category-posts {
    border-top: 1px solid var(--color-border);
    padding-top: calc(var(--grid-unit) * 2);
  }

  .category-post {
    margin-bottom: calc(var(--grid-unit) * 1.5);
    padding-bottom: calc(var(--grid-unit) * 1.5);
    border-bottom: 1px solid rgba(var(--color-border), 0.3);
  }

  .category-post:last-of-type {
    border-bottom: none;
    margin-bottom: 0;
    padding-bottom: 0;
  }

  .category-post-title {
    font-family: var(--font-body);
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: calc(var(--grid-unit) / 2);
    line-height: 1.4;
  }

  .category-post-title a {
    color: var(--color-text-primary);
    text-decoration: none;
  }

  .category-post-title a:hover,
  .category-post-title a:focus {
    color: var(--color-accent);
    text-decoration: underline;
  }

  .category-post-date {
    font-family: var(--font-mono);
    font-size: 0.75rem;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .category-more {
    margin-top: calc(var(--grid-unit) * 1.5);
    padding-top: calc(var(--grid-unit) * 1.5);
    border-top: 1px solid var(--color-border);
  }

  .category-more a {
    font-family: var(--font-heading-secondary);
    font-weight: 700;
    font-size: 0.9rem;
    color: var(--color-accent);
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .category-more a:hover,
  .category-more a:focus {
    color: var(--color-text-primary);
    text-decoration: underline;
  }

  .no-categories {
    text-align: center;
    padding: calc(var(--grid-unit) * 6);
    color: var(--color-text-muted);
    font-style: italic;
  }

  @media (max-width: 768px) {
    .page-title {
      font-size: 2.5rem;
    }

    .categories-grid {
      grid-template-columns: 1fr;
    }
  }
</style>