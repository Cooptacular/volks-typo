---
import Layout from '../components/Layout.astro';

// Get all blog posts and extract categories
const allPosts = await Astro.glob('./blog/*.md');
const categories = [...new Set(allPosts.flatMap(post => post.frontmatter.categories || []))];

// Group posts by category
const postsByCategory = categories.reduce((acc, category) => {
  acc[category] = allPosts.filter(post => 
    post.frontmatter.categories && post.frontmatter.categories.includes(category)
  ).sort((a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime());
  return acc;
}, {} as Record<string, any[]>);
---

<Layout title="Categories | Volks-Typo" description="Browse posts by category">
  <div class="categories-page">
    <header class="page-header">
      <h1 class="page-title">Categories</h1>
      <p class="page-description">
        Explore posts organized by topic and theme.
      </p>
      <hr class="page-rule" />
    </header>

    {categories.length > 0 ? (
      <div class="categories-grid">
        {categories.map(category => (
          <section class="category-section">
            <h2 class="category-title">{category}</h2>
            <div class="category-posts">
              {postsByCategory[category].map(post => (
                <article class="post-item">
                  <h3 class="post-title">
                    <a href={post.url}>{post.frontmatter.title}</a>
                  </h3>
                  
                  <time class="post-date" datetime={post.frontmatter.date}>
                    {new Date(post.frontmatter.date).toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'short',
                      day: 'numeric'
                    })}
                  </time>
                  
                  {post.frontmatter.excerpt && (
                    <p class="post-excerpt">{post.frontmatter.excerpt}</p>
                  )}
                </article>
              ))}
            </div>
          </section>
        ))}
      </div>
    ) : (
      <div class="no-categories">
        <p>No categories found. Start writing posts with categories in the frontmatter.</p>
      </div>
    )}
  </div>
</Layout>

<style>
  .categories-page {
    max-width: 900px;
    margin: 0 auto;
  }

  .page-header {
    text-align: center;
    margin-bottom: calc(var(--grid-unit) * 8);
  }

  .page-title {
    font-family: var(--font-heading-primary);
    font-size: 3.5rem;
    font-weight: 900;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    line-height: 1.1;
    margin-bottom: calc(var(--grid-unit) * 3);
  }

  .page-description {
    font-size: 1.25rem;
    line-height: 1.6;
    color: var(--color-text-secondary);
    margin-bottom: calc(var(--grid-unit) * 4);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .page-rule {
    height: 4px;
    background-color: var(--color-accent);
    border: none;
    width: 120px;
    margin: 0 auto;
  }

  .categories-grid {
    display: flex;
    flex-direction: column;
    gap: calc(var(--grid-unit) * 8);
  }

  .category-section {
    border: 1px solid var(--color-border);
    border-radius: 8px;
    padding: calc(var(--grid-unit) * 4);
    background-color: var(--color-surface);
  }

  .category-title {
    font-family: var(--font-heading-secondary);
    font-size: 2rem;
    font-weight: 700;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: calc(var(--grid-unit) * 4);
    border-bottom: 2px solid var(--color-accent);
    padding-bottom: calc(var(--grid-unit));
  }

  .category-posts {
    display: flex;
    flex-direction: column;
    gap: calc(var(--grid-unit) * 4);
  }

  .post-item {
    border-bottom: 1px solid var(--color-border);
    padding-bottom: calc(var(--grid-unit) * 3);
  }

  .post-item:last-child {
    border-bottom: none;
    padding-bottom: 0;
  }

  .post-title {
    font-family: var(--font-heading-secondary);
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: calc(var(--grid-unit));
  }

  .post-title a {
    color: var(--color-text-primary);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .post-title a:hover,
  .post-title a:focus {
    color: var(--color-accent);
  }

  .post-date {
    font-family: var(--font-mono);
    font-size: 0.9rem;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    display: block;
    margin-bottom: calc(var(--grid-unit) * 1.5);
  }

  .post-excerpt {
    color: var(--color-text-secondary);
    line-height: 1.6;
    margin: 0;
  }

  .no-categories {
    text-align: center;
    padding: calc(var(--grid-unit) * 6);
    color: var(--color-text-muted);
    font-style: italic;
  }

  @media (max-width: 768px) {
    .page-title {
      font-size: 2.5rem;
    }

    .page-description {
      font-size: 1.125rem;
    }

    .category-title {
      font-size: 1.75rem;
    }

    .post-title {
      font-size: 1.25rem;
    }
  }
</style>